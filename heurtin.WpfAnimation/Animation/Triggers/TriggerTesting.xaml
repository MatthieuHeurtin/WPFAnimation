<Window x:Class="heurtin.WpfAnimation.Animation.Triggers.TriggerTesting"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:heurtin.WpfAnimation.Animation.Triggers"
        mc:Ignorable="d"
        Title="TriggerTesting" Height="450" Width="800">

    <Window.Resources>

        <Style TargetType = "Button">
            <Setter Property = "Foreground" Value = "Blue" />
            <Setter Property = "Width" Value = "50" />
            <Setter Property = "Height" Value = "30" />
            <Style.Triggers>
                <Trigger Property = "IsMouseOver" Value = "True">
                    <Setter Property = "Foreground" Value = "Red" />
                    <Setter Property = "Width" Value = "100" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType = "TextBox">
            <Setter Property = "BorderThickness" Value = "1" />
            <Setter Property = "BorderBrush" Value = "White" />
            <Setter Property="Background" Value="WhiteSmoke"/>
            <Setter Property="FontSize" Value="12"/>
            <Style.Triggers>
                <Trigger Property = "IsFocused" Value = "True">
                    <Setter Property = "BorderThickness" Value = "2" />
                    <Setter Property="Background" Value="NavajoWhite"/>
                    <Setter Property="FontSize" Value="15"/>
                </Trigger>
                <Trigger Property = "IsMouseOver" Value = "True">
                    <Setter Property="FontSize" Value="15"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="BasicLabels">
            <Label Name="MyLabel" Content="{Binding Name}"/>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}},Path=IsMouseOver}" Value="True">
                    <Setter TargetName="MyLabel" Property="Foreground" Value="Red"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>


        <!--<Style TargetType = "TextBlock">
            <Setter Property="Background" Value="WhiteSmoke"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Width" Value="50"/>
            <Style.Triggers>
                <Trigger Property = "IsFocused" Value = "True">
                    <Setter Property="Background" Value="NavajoWhite"/>
                    <Setter Property="FontSize" Value="15"/>
                    <Setter Property="Width" Value="150"/>
                </Trigger>
                <Trigger Property = "IsMouseOver" Value = "True">
                    <Setter Property="FontSize" Value="15"/>
                </Trigger>
            </Style.Triggers>
        </Style>-->


        <SolidColorBrush x:Key="brush" Color="Yellow"></SolidColorBrush>

    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>

        <Button Grid.Column="0" Content="I'm a button"/>
        <TextBox Grid.Column="1" Text="I'm a TextBox" />

        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <ListView Grid.Row="0" Margin="10" ItemsSource="{Binding Elements}">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Name"   CellTemplate="{StaticResource BasicLabels}" />
                        <GridViewColumn Header="Integer"   DisplayMemberBinding="{Binding Integer}" />
                        <GridViewColumn Header="Boolean"   DisplayMemberBinding="{Binding Boolean}" />
                    </GridView>
                </ListView.View>
            </ListView>
            <TextBox Grid.Row="1" Height="100" Text="Name;Integer;Boolean" VerticalAlignment="Top" Name="AddTextBox"/>
            <Button Name="AddButton" Grid.Row="1" Content="Add" Command="{Binding AddCommand}" CommandParameter="{Binding Text, ElementName=AddTextBox}" VerticalAlignment="Bottom"/>
            <TextBlock  Text="Adding Element">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Hidden" />
                        <Setter Property="Opacity" Value="0" />
                        <Style.Triggers>
                            <!--<Trigger Property="AddButton.IsPressed" Value="true">
                                
                                <Setter Property="Visibility" Value="Visible" />
                                <Setter Property="Opacity" Value="1" />
                            </Trigger>-->
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>



        </Grid>
        <Grid Grid.Column="3">
            <TextBlock HorizontalAlignment="Center" Margin="0,20,0,0">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value="Waiting an element to be added" />
                        <Setter Property="Foreground" Value="Red" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsAdded}" Value="True">
                                <Setter Property="Text" Value="Element being added..." />
                                <Setter Property="Foreground" Value="Green" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

        </Grid>
    </Grid>
</Window>
